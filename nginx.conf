upstream backend {
    server reverse-proxy:80 weight=1;
}
          

server {


    listen 443 ssl;

    listen 80;
    server_name qrinventory.ru;
    ssl_certificate /etc/ssl/your_domain.crt;
    ssl_certificate_key /etc/ssl/your_domain.key;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    keepalive_timeout 70;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_trusted_certificate /etc/ssl/ca.crt;
    resolver ns1.reg.ru;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;   

    }

    location ~ ^/api/(.*) {
        proxy_pass http://backend/api/$1$is_args$args;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# upstream backend {
#     server reverse-proxy:8000 weight=1;
# }

# server {
#     listen       80;
#     server_name  frontend;

#     # location / {
#     #     root   /usr/share/nginx/html;
#     #     index  index.html index.htm;
#     #     try_files $uri /index.html;                 
#     # }

#     # location ~ ^/api/(.*) {
#     #     proxy_set_header X-Real-IP $remote_addr;
#     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #     proxy_set_header X-Forwarded-Proto $scheme;
#     #     proxy_set_header Host $http_host;
#     #     proxy_set_header X-NginX-Proxy true;
#     #     proxy_pass http://backend/$1$is_args$args;
#     # }

#     # location / {
#     #     proxy_pass http://backend;
#     # }

#     # error_page   500 502 503 504  /50x.html;
#     # location = /50x.html {
#     #     root   /usr/share/nginx/html;
#     # }
# }

        log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';
        access_log  /var/log/nginx/access.log upstreamlog;  

# server {
#     listen 80;
#     server_name localhost;

#     location / {
#         proxy_pass http://reverse-proxy:80;
#     }
# }